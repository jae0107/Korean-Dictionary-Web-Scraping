// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String
  email                 String?   @unique
  year                  Int?
  class                 String?
  number                Int?
  accountId             String   @unique
  password              String
  role                  String
  status                String  @default("PENDING")
  previousStatus        String?
  passwordResetRequests PasswordResetRequest[]
  myVocabularies        MyVocabulary[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("users")
}

model Word {
  id              String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String
  korDicResults   String[]
  naverDicResults String[]
  requestorIds    String[]
  pages           Int[]
  example         String?
  status          String  @default("PENDING")
  previousStatus  String?
  deniedReason    String?
  myVocabularies  MyVocabulary[]
  wordId          String? @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("words")
}

model PasswordResetRequest {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  requestor     User?   @relation(fields: [requestorId], references: [id])
  requestorId   String? @unique @db.Uuid
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("passwordResetRequests")
}

model MyVocabulary {
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user        User @relation(fields: [userId], references: [id])
  userId      String @db.Uuid
  word        Word @relation(fields: [wordId], references: [id])
  wordId      String @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, wordId])
  @@map("myVocabularies")
}